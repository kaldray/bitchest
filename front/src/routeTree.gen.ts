/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as AuthenticatedImport } from "./routes/_authenticated"
import { Route as IndexImport } from "./routes/index"
import { Route as AuthenticatedLayoutImport } from "./routes/_authenticated/_layout"
import { Route as AuthenticatedLayoutWalletImport } from "./routes/_authenticated/_layout/wallet"
import { Route as AuthenticatedLayoutPurchaseImport } from "./routes/_authenticated/_layout/purchase"
import { Route as AuthenticatedLayoutCurrenciesImport } from "./routes/_authenticated/_layout/currencies"
import { Route as AuthenticatedLayoutWalletIdImport } from "./routes/_authenticated/_layout/wallet_.$id"
import { Route as AuthenticatedLayoutCurrenciesCurrencyImport } from "./routes/_authenticated/_layout/currencies_.$currency"

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: "/_authenticated",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedLayoutRoute = AuthenticatedLayoutImport.update({
  id: "/_layout",
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedLayoutWalletRoute = AuthenticatedLayoutWalletImport.update({
  path: "/wallet",
  getParentRoute: () => AuthenticatedLayoutRoute,
} as any).lazy(() =>
  import("./routes/_authenticated/_layout/wallet.lazy").then((d) => d.Route),
)

const AuthenticatedLayoutPurchaseRoute =
  AuthenticatedLayoutPurchaseImport.update({
    path: "/purchase",
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/_layout/purchase.lazy").then(
      (d) => d.Route,
    ),
  )

const AuthenticatedLayoutCurrenciesRoute =
  AuthenticatedLayoutCurrenciesImport.update({
    path: "/currencies",
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/_layout/currencies.lazy").then(
      (d) => d.Route,
    ),
  )

const AuthenticatedLayoutWalletIdRoute =
  AuthenticatedLayoutWalletIdImport.update({
    path: "/wallet/$id",
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/_layout/wallet_.$id.lazy").then(
      (d) => d.Route,
    ),
  )

const AuthenticatedLayoutCurrenciesCurrencyRoute =
  AuthenticatedLayoutCurrenciesCurrencyImport.update({
    path: "/currencies/$currency",
    getParentRoute: () => AuthenticatedLayoutRoute,
  } as any).lazy(() =>
    import("./routes/_authenticated/_layout/currencies_.$currency.lazy").then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_authenticated": {
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    "/_authenticated/_layout": {
      preLoaderRoute: typeof AuthenticatedLayoutImport
      parentRoute: typeof AuthenticatedImport
    }
    "/_authenticated/_layout/currencies": {
      preLoaderRoute: typeof AuthenticatedLayoutCurrenciesImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    "/_authenticated/_layout/purchase": {
      preLoaderRoute: typeof AuthenticatedLayoutPurchaseImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    "/_authenticated/_layout/wallet": {
      preLoaderRoute: typeof AuthenticatedLayoutWalletImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    "/_authenticated/_layout/currencies/$currency": {
      preLoaderRoute: typeof AuthenticatedLayoutCurrenciesCurrencyImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
    "/_authenticated/_layout/wallet/$id": {
      preLoaderRoute: typeof AuthenticatedLayoutWalletIdImport
      parentRoute: typeof AuthenticatedLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRoute.addChildren([
    AuthenticatedLayoutRoute.addChildren([
      AuthenticatedLayoutCurrenciesRoute,
      AuthenticatedLayoutPurchaseRoute,
      AuthenticatedLayoutWalletRoute,
      AuthenticatedLayoutCurrenciesCurrencyRoute,
      AuthenticatedLayoutWalletIdRoute,
    ]),
  ]),
])

/* prettier-ignore-end */
